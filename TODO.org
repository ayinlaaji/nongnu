** Fix bugs and unintended behavior

Since =geiser-kawa= limits itself to ask =kawa-devutil= for data and then wrap it in geiser's protocol, most of the bugs are actually in =kawa-devutil=.

- Completion for Java is often broken
- Autodoc when using colon notation on Java methods doesn't show all the alternatives
- Evaluation should not capture Java's output by default, only Kawa's: I wrote it this way because at the time I was convinced it was a feature, but then I realized it's bad design
- Fix kawa-devutil issues

** Add elisp tests, find bugs, fix them

Write tests for these:

#+BEGIN_SRC emacs-lisp :results silent
(setq f (geiser-kawa-devutil-complete--get-data "java.lang.String:" 17))
(setq m (geiser-kawa-devutil-complete--get-data "(java.lang.String:)" 18))
(setq pm (geiser-kawa-devutil-complete--get-data "(java.lang.)" 11))
(setq pm1 (geiser-kawa-devutil-complete--get-data "(java.lang)" 10))
(setq spm (geiser-kawa-devutil-complete--get-data "(co)" 3))
(setq s (geiser-kawa-devutil-complete--get-data "(disp)" 5))
(setq s1 (geiser-kawa-devutil-complete--get-data "(di)" 3))
#+END_SRC

** Write melpa recipe and put on melpa

There are still obvious bugs that need to be fixed before the quality of the package becomes sufficient for melpa.

I tried to make a melpa recipe and it seems to work. Here are the instructions to reproduce it.

#+BEGIN_SRC shell
git clone "https://github.com/melpa/melpa.git"
cd melpa
emacs make sandbox
#+END_SRC

Create new a new recipe file =recipes/geiser-kawa= and insert these contents:

#+BEGIN_SRC emacs-lisp
(geiser-kawa
 :fetcher gitlab
 :repo "spellcard199/geiser-kawa"
 :files ("elisp/*.el"
         "pom.xml"
         ".mvn" "mvnw" "mvnw.cmd"
         "src"))
#+END_SRC

Test that it works:
1. Install package:
     1. use =C-cC-c= inside =geiser-kawa='s recipe buffer
     2. follow instructions
2. Load =geiser-kawa=:
  : (require 'geiser-kawa)
3. Use included Kawa to avoid confounding fators related to availability or version of Kawa:
  : (setq geiser-kawa-use-included-kawa t)
4. =run-kawa=

** Check if Kawa, Emacs and Geiser work on Windows. If yes, make the elisp function wrapping maven wrapper run =mvnw.cmd= instead of =mvnw= when on Windows
** Add geiser-kawa-java-find-pc (package or class)

1. =geiser-kawa-java-find-pc-default-classloaders=
2. =geiser-kawa-java-find-pc--cache=
3. =geiser-kawa-java-find-pc-refresh-cache=
3. =geiser-kawa-java-find-pc (&optional classloader-list)=
