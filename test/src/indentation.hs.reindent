v
-- | Idealised indentation scenarios.
v
--
v
--   Bugs and unexpected behaviour in (re-)indentation may be documented here.
v
--
v
--   Lines marked "manual correction" indicate where we expect the user to
v
--   re-indent because it goes against our prediction. In some of these cases,
v
--   we could improve the guess with semantic information (e.g. if we know that
v
--   the RHS of a bind is only partially applied, then we probably mean to
v
--   continue that line instead of start a new one).
v
module Indentation where
v

v
import Foo.Bar
v                       1
import Foo.Baz hiding ( gaz,
1                     2 v
                        baz
2                     v 1
                      )
v                     1 2

v 1                   2 3
basic_do = do
1 v
  foo <- blah blah blah
v 1      2
  bar <- blah blah
2 1      v
         blah -- manual correction
2 1      v
         blah -- manual correction
v 2      1
  sideeffect
v 1   2  3
  sideeffect' blah
v 1      3  2
  let baz = blah blah
3 2   1  4  v
            blah -- manual correction
v 3   2  4  1
      gaz = blah
v 3   1 24  5
      haz =
3 2   1 v4  5
        blah
2 v   3 14  5
  pure faz -- manual correction
1 v   2 34  5

v 2  13 45  6
nested_do = -- manual correction
v       1
  do foo <- blah
v    1  2
     do bar <- blah -- same level as foo
v    2  1
        baz -- same level as bar
1    2  v

v    1  2
nested_where a b = foo a b
1 v 2
  where -- TODO 2
1   v
    foo = bar baz -- indented
v   1
    baz = blah blah -- same level as foo
2   v   1
      where -- manual correction
1   2   v
        gaz a = blah -- indented
v   2   1
        faz = blah -- same level as gaz
1   2   v

v   1   2
-- TODO case statements
v   1   2
-- TODO let / in
1   2   v

v   1   2
-- TODO coproduct definitions, the | should align with =
1   2   v

v   1   2
-- TODO lists, records, tuples
1   2   v

v   1   2
-- TODO long type signatures vs definitions