-- Figure 2.1 from the Haskell2010 report
v
module AStack( Stack, push, pop, top, size ) where
v
data Stack a = Empty
.            .   v
             | MkStack a (Stack a)
.            v

v            .
push :: a -> Stack a -> Stack a
v
push x s = MkStack x s
.                  v

v
size :: Stack a -> Int
v
size s = length (stkToLst s)  where
. v        .
           stkToLst  Empty         = []
.          .                           v
           stkToLst (MkStack x s)  = x:xs where xs = stkToLst s
.          .                                                  v

.          .                                                  v
pop :: Stack a -> (a, Stack a)
v
pop (MkStack x s)
. . v
  = (x, case s of r -> i r where i x = x) -- (pop Empty) is an error
. .   v

v .
top :: Stack a -> a
v
top (MkStack x s) = x                     -- (top Empty) is an error
v