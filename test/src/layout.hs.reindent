v
-- Figure 2.1 from the Haskell2010 report
v 1
module AStack( Stack, push, pop, top, size ) where
2 v          1                                 3
data Stack a = Empty
1 2              v
             | MkStack a (Stack a)
v            1 2

v 1          2
push :: a -> Stack a -> Stack a
v 1
push x s = MkStack x s
v 1

v 1
size :: Stack a -> Int
v 2        1
size s = length (stkToLst s)  where
2 3        1 v                  4
           stkToLst  Empty         = []
v          1 2                  3
           stkToLst (MkStack x s)  = x:xs where xs = stkToLst s
1          2 3                              4                 v

v 1        2
pop :: Stack a -> (a, Stack a)
v 1
pop (MkStack x s)
v 1
  = (x, case s of r -> i r where i x = x) -- (pop Empty) is an error
v 1 2                        3

v 1
top :: Stack a -> a
v 1
top (MkStack x s) = x                     -- (top Empty) is an error