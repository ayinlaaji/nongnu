v
-- Figure 2.1 from the Haskell2010 report
v
module AStack( Stack, push, pop, top, size ) where
v            1
data Stack a = Empty
1              v
             | MkStack a (Stack a)
v            1

v            1
push :: a -> Stack a -> Stack a
v
push x s = MkStack x s
v

v
size :: Stack a -> Int
v          1
size s = length (stkToLst s)  where
1          v                                    2
           stkToLst  Empty         = []
v          1
           stkToLst (MkStack x s)  = x:xs where xs = stkToLst s
3          2                                    1    v

v          1                                    2
pop :: Stack a -> (a, Stack a)
v 4               3              2      1
pop (MkStack x s)
v
  = (x, case s of r -> i r where i x = x) -- (pop Empty) is an error
v 4               3              2      1

v 1               2              3      4
top :: Stack a -> a
v
top (MkStack x s) = x                     -- (top Empty) is an error